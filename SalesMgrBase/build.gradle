/*
 * This build file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.3/userguide/java_library_plugin.html
 */

// Apply the java-library plugin to add support for Java Library
apply plugin: 'java-library'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

//设置编码格式
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

//配置资源路径
sourceSets {
   main {
      java {
         srcDir 'src/main/java'
      }
      resources {
         srcDir 'src/main/resource'
      }
   }
}

dependencies {
	//webbase
	compile 'jstl:jstl:1.2'
    
    //mybaties and mysql
    compile 'mysql:mysql-connector-java:5.1.38'
    compile 'org.mybatis.generator:mybatis-generator-core:1.3.2'
    compile 'org.mybatis:mybatis-spring:1.2.3'
    compile 'com.github.miemiedev:mybatis-paginator:1.2.17'
    compile 'org.mybatis:mybatis:3.3.0'
    compile 'junit:junit:4.12'
    
    //json
    compile 'com.alibaba:fastjson:1.2.8'

    compile files('src/lib/lingshi_base.jar') //未加入maven中央库,需要手动加到本地仓库
}

//Task
configurations {  
    mybatisGenerator  
}
repositories {  
    mavenCentral()  
}  
dependencies {  
    mybatisGenerator 'org.mybatis.generator:mybatis-generator-core:1.3.2'  
    mybatisGenerator 'mysql:mysql-connector-java:5.1.36'
    mybatisGenerator files('src/lib/lingshi_base.jar')
}
task mybatisGenerator {  
   doLast {
	    def properties = new Properties()  
        file("src/main/resource/mybatis/generator/config.properties").withInputStream { 
           inputStream ->  properties.load(inputStream)  
        }    
	    ant.properties['targetProject'] = projectDir.path  
	    ant.properties['driverClass'] = properties.getProperty("driverClass")  
	    ant.properties['connectionURL'] = properties.getProperty("connectionURL")  
	    ant.properties['userId'] = properties.getProperty("userId")  
	    ant.properties['password'] = properties.getProperty("password")  
	    ant.properties['srcMainJava'] = projectDir.path + '/src/main/java'
	    ant.properties['srcMainResource'] = projectDir.path + '/src/main/resource'
	    ant.properties['modelPackage'] = properties.getProperty("modelPackage")
	    ant.properties['clientPackage'] = properties.getProperty("clientPackage")
	    ant.properties['mapperPackage'] = properties.getProperty("mapperPackage")
	    ant.taskdef(
	       name:'mbgenerator',
	       classname:'org.mybatis.generator.ant.GeneratorAntTask',
	       classpath:configurations.mybatisGenerator.asPath
	    )  
	    ant.mbgenerator(overwrite:true,configfile:projectDir.path+'/src/main/resource/mybatis/generator/generatorConfig.xml',verbose:true) {  
	        propertyset {
	            propertyref(name:'targetProject') 
	            propertyref(name:'driverClass')
	            propertyref(name:'connectionURL')
	            propertyref(name:'userId')
	            propertyref(name:'password')
	            propertyref(name:'srcMainJava')
	            propertyref(name:'srcMainResource')
	            propertyref(name:'modelPackage')
	            propertyref(name:'clientPackage')
	            propertyref(name:'mapperPackage')
	        }  
	    }  
    }
}
